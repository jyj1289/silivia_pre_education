// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId Int @id @default(autoincrement()) @map("user_id")
  name String 
  orders Order[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Product {
  productId Int @id @default(autoincrement()) @map("product_id")
  name String
  price Int
  quantity Int
  orderItems OrderItem[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Order {
  orderId Int @id @default(autoincrement()) @map("order_id")
  userId Int @map("user_id")
  user User @relation(fields: [userId], references: [userId])
  orderItems OrderItem[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model OrderItem {
  orderId Int @map("order_id")
  productId Int @map("product_id")
  order Order @relation(fields: [orderId], references: [orderId])
  product Product @relation(fields: [productId], references: [productId])
  quantity Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@id([orderId, productId])
}